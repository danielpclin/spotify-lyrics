/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application
    application

    id("org.openjfx.javafxplugin") version "0.0.8"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation("com.google.guava:guava:28.0-jre")

    compile(group = "org.apache.commons", name = "commons-lang3", version = "3.1")
    compile(group = "org.apache.commons", name = "commons-csv", version = "1.7")
    compile(group = "net.java.dev.jna", name = "jna", version = "4.5.0")
    compile("org.jsoup:jsoup:1.12.1")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")
}

application {
    // Define the main class for the application
    mainClassName = "com.danielpclin.App"
}

javafx {
    modules("javafx.controls", "javafx.fxml")
}

tasks.withType<JavaCompile>{
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>{
    options.encoding = "UTF-8"
}

tasks.withType<Jar> {
    manifest {
        attributes["Main-Class"] = application.mainClassName
    }

    from(configurations.runtime.get().map {if (it.isDirectory) it else zipTree(it)})
}